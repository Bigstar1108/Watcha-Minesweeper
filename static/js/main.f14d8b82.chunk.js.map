{"version":3,"sources":["components/Main/Award-item.js","containers/Main.js","lib/index.js","components/gameHome/game-header.js","components/gameHome/game-area.js","modules/actions/index.js","components/gameHome/awardModal.js","components/gameHome/game-popup.js","containers/gameHome.js","components/Footer/Footer.js","App.js","modules/reducers/minesweeper.reducer.js","modules/reducers/index.js","index.js"],"names":["AwardItem","name","time","className","Main","history","useHistory","useState","awards","setAwards","useEffect","localAwards","JSON","parse","localStorage","getItem","sortAwards","sort","a","b","slice","type","onClick","push","length","map","index","id","key","defaultProps","minesweeperBox","boxValue","row","col","undefined","isState","GameHeader","mines","handleRestartGame","console","warn","GameArea","useSelector","state","Minesweeper","opened","boxs","isStopGame","toggleTimer","settoggleTimer","dispatch","useDispatch","handleFinishGame","handleStartTime","expansionBox","parseInt","copyObj","Object","assign","copyOpened","isFirst","text","classList","ii","jj","obj","num","actions","handleFlag","handleDeleteFlag","interval","setInterval","log","clearInterval","handleClickBox","handleGameOver","keys","onContextMenu","event","preventDefault","handleCreateFlag","handleClickNumber","handleUpdateBox","AwardModal","setName","onSubmit","e","award","setItem","stringify","localAward","alert","value","onChange","target","placeholder","onChangeName","GamePopup","popupText","handleCreateMines","Modal","setModal","handleConfirm","window","confirm","popUpContainer","handleonClick","GameHome","boxObj","i","j","randomRow","randomCol","placedMines","Math","floor","random","setRandomMines","Footer","href","App","basename","exact","path","component","initialState","rootReducer","combineReducers","action","update","$set","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f14d8b82.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AwardItem = ({ name, time}) => {\r\n  return(\r\n    <div className = \"AwardItem\">\r\n      <span>🎉 <b>걸린 시간:</b> {time}, <b>이름:</b> {name}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AwardItem;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AwardItem from '../components/Main/Award-item';\r\nimport '../styles/Main/Main.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Main = () => {\r\n    const history = useHistory();\r\n    const [awards, setAwards] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const localAwards = JSON.parse(localStorage.getItem('award'));\r\n        if(localAwards === null){\r\n            setAwards([]);\r\n        }else{\r\n            const sortAwards = localAwards.sort(function(a, b){\r\n                if(a.time > b.time){\r\n                    return 1;\r\n                }\r\n                if(a.time < b.time){\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n            setAwards(sortAwards.slice(0, 10));\r\n        }\r\n    }, []);\r\n\r\n    return(\r\n        <div className = \"MainContainer\">\r\n            <div className = \"MainLogo\">\r\n                <span>Minesweeper💣</span>\r\n                <button type = \"button\" onClick = {() => history.push('/minesweeper')}>게임 시작!</button>\r\n            </div>\r\n\r\n            <div className = \"MainAwardBoard\">\r\n                <div className = \"MainAwardTitle\">\r\n                    <span>지뢰찾기 명예의 전당</span>\r\n                </div>\r\n                {\r\n                    awards.length === 0 ? <span>명예의 전당에 아무도 없습니다.</span>\r\n                    : <>{\r\n                        awards.map((awards, index) => (\r\n                            <AwardItem\r\n                                id = {index}\r\n                                key = {index}\r\n                                name = {awards.name}\r\n                                time = {awards.time}\r\n                            />\r\n                        ))\r\n                    }</>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMain.propTypes = {\r\n    awards: PropTypes.array,\r\n};\r\n\r\nMain.defaultProps = {\r\n    awards: [],\r\n};\r\n\r\nexport default Main;","//지뢰를 가진 8 * 8 minesweeperBox(오브젝트) 생성\r\n\r\nlet minesweeperBox = {};\r\n\r\nexport function boxValue(row, col){\r\n    if(minesweeperBox[ `${row}${col}` ] === undefined){\r\n        //지뢰찾기 맵의 없는 값이 있을 경우 unValue\r\n        return 'unValue';\r\n    }else{\r\n        return minesweeperBox[ `${row}${col}` ].isState;\r\n    };\r\n};\r\n\r\nexport function setRandomMines(){\r\n    const row = 8;\r\n    const col = 8;\r\n    const mines = 9;\r\n\r\n    for(let i=0; i < row; i++){\r\n        for(let j=0; j < col; j++){\r\n            minesweeperBox[ `${i}${j}` ] = {\r\n                text: '',\r\n                classList: 'box',\r\n                isFirst: true,\r\n                isState: 0\r\n            }\r\n        }\r\n    };\r\n\r\n    let placedMines = 0;\r\n    let randomRow, randomCol;\r\n    while(placedMines < mines){\r\n        // 총 9개의 지뢰를 랜덤 위치에 지정\r\n        randomRow = Math.floor(Math.random() * row);\r\n        randomCol = Math.floor(Math.random() * col);\r\n        if(minesweeperBox[`${randomRow}${randomCol}`].isState === 0){\r\n            // 숫자 9는 mines인지 아닌지를 판별하기 위한 숫자, 즉 숫자 9일 때 지뢰\r\n            minesweeperBox[`${randomRow}${randomCol}`].isState = 9;\r\n            placedMines++;\r\n        }\r\n    }\r\n\r\n    // mines 조건에 따른 숫자 넣기\r\n    for(let i=0; i < row; i++){\r\n        for(let j=0; j < col; j++){\r\n            if(minesweeperBox[`${i}${j}`].isState === 9){\r\n                //만약 지뢰를 가진 곳이라면\r\n                for(let ii=-1; ii<=1; ii++){\r\n                    for(let jj=-1; jj<=1; jj++){\r\n                        if(ii!==0 || jj!==0){\r\n                            if(boxValue(i+ii, j+jj) !== 9 && boxValue(i+ii, j+jj) !== 'unValue'){\r\n                                //만약 [0,0]이면 [-1,-1],[-1,0],[-1,1],[0,-1],[0,0][0,1],[1,-1],[1,0],[1,1]\r\n                                minesweeperBox[`${i+ii}${j+jj}`].isState++;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return minesweeperBox;\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GameHeader = ({time, mines, handleRestartGame}) => {\r\n    return(\r\n        <div className = \"GameHeader\">\r\n            <span>남은 지뢰 : {mines}</span>\r\n            <span>Time : {time}</span>\r\n            <button type = \"button\" onClick = {() => handleRestartGame()}>다시 시작하기</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nGameHeader.propTypes = {\r\n    mines: PropTypes.number,\r\n    handleRestartGame: PropTypes.func,\r\n};\r\n\r\nGameHeader.defaultProps = {\r\n    mines: 10,\r\n    handleRestartGame: () => console.warn('handleRestartGame not defined'),\r\n};\r\n\r\nexport default GameHeader;","import React, { useEffect, useState } from 'react';\r\nimport * as actions from '../../modules/actions';\r\nimport PropTypes from 'prop-types';\r\nimport { boxValue } from '../../lib';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst GameArea = () => {\r\n    const { opened, boxs, isStopGame } = useSelector((state) => state.Minesweeper);\r\n    const [ toggleTimer, settoggleTimer ] = useState(false); //false시 타이머 멈춤, true시 타이머 시작\r\n    const dispatch = useDispatch();\r\n\r\n    const handleUpdateBox = (obj, num) => dispatch(actions.updateBox(obj, num));\r\n    const handleCreateFlag = (id) => dispatch(actions.createFlag(id));\r\n    const handleDeleteFlag = (id) => dispatch(actions.deleteFlag(id));\r\n    const handleClickNumber = (id, num) => dispatch(actions.clickNumber(id, num));\r\n    const handleGameOver = (id) =>  dispatch(actions.gameOver(id));\r\n    const handleFinishGame = () => dispatch(actions.finishGame());\r\n    const handleStartTime = () => dispatch(actions.startTime());\r\n\r\n    // 빈 Box 클릭시 확장을 다루는 함수\r\n    const expansionBox = (key) => {\r\n        let row = parseInt(key[0], 10);\r\n        let col = parseInt(key[1], 10);\r\n\r\n        // store의 값을 복사하여 처리한 후에 다시 dispatch 처리\r\n        let copyObj = Object.assign({}, boxs);\r\n        let copyOpened = 0;\r\n\r\n        if(copyObj[key].isFirst === true && isStopGame === false){\r\n            copyObj[key].isFirst = false;\r\n\r\n            // box의 상태가 숫자일 때\r\n            if(copyObj[key].isState > 0){\r\n                copyObj[key].text = copyObj[key].isState;\r\n                copyOpened++;\r\n            }\r\n            // box의 상태가 빈 값(0)일 때\r\n            else if(copyObj[key].isState === 0){\r\n                copyObj[key].classList = 'box opened';\r\n                copyOpened++;\r\n\r\n                for(let ii=-1; ii<=1; ii++){\r\n                    for(let jj=-1; jj<=1; jj++){\r\n                        if(ii!==0 || jj!==0){\r\n                            if(boxValue(row+ii, col+jj) !== 9 && boxValue(row+ii, col+jj) !== 'unValue'){\r\n                                expansionBox(`${row+ii}${col+jj}`);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        handleUpdateBox(copyObj, copyOpened);\r\n\r\n        if(opened >= 53){\r\n            handleFinishGame();\r\n        }\r\n    }\r\n\r\n    // 오른쪽 클릭시 깃발 toggle\r\n    const handleFlag = (key) => {\r\n        if(isStopGame === false){\r\n            if(boxs[key].text === ''){\r\n                handleCreateFlag(key);\r\n            }\r\n            else if(boxs[key].text === '⚑'){\r\n                handleDeleteFlag(key);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let interval = null;\r\n        if(toggleTimer){\r\n            handleStartTime();\r\n\r\n            let interval = setInterval(() => {\r\n                handleStartTime();\r\n            }, 1000);\r\n            if(opened >= 53 || isStopGame === true){\r\n                console.log(\"stop\");\r\n                clearInterval(interval);\r\n            };\r\n            return () => clearInterval(interval);\r\n        }else{\r\n            clearInterval(interval);\r\n            return () => clearInterval(interval);\r\n        }\r\n    }, [toggleTimer]);\r\n\r\n    // box를 클릭했을 때 처리\r\n    const handleClickBox = (key) => {\r\n        // 첫 box를 눌렀을 때만 startGameTime을 실행해야하기 때문에 필요한 조건문\r\n        if(opened === 0 && isStopGame === false){\r\n            settoggleTimer(true);\r\n        }\r\n\r\n        if(boxs[key].text !== '⚑' && boxs[key].isFirst === true && isStopGame === false){\r\n            //box의 상태가 빈 값(0)일 때\r\n            if(boxs[key].isState === 0){\r\n                expansionBox(key);\r\n            }\r\n\r\n            //box의 상태가 숫자일 때\r\n            if(boxs[key].isState > 0 && boxs[key].isState < 9){\r\n                handleClickNumber(key, boxs[key].isState);\r\n            }\r\n\r\n            //box의 상태가 지뢰(9)일 때\r\n            if(boxs[key].isState === 9){\r\n                settoggleTimer(false);\r\n                handleGameOver(key);\r\n            }\r\n        }\r\n\r\n        //열린 box의 개수가 53개일 때 (8 * 8 - 10 = 54이지만 ++opened를 해줬으므로 -1)\r\n        if(opened >= 53){\r\n            settoggleTimer(false);\r\n            handleFinishGame();\r\n        }\r\n    }\r\n\r\n    const renderList = () => {\r\n        // Object의 key값을 array로 만든 후 00~ 순서로 정렬\r\n        let arrays = Object.keys(boxs).sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\r\n        return arrays.map((key) => {\r\n            return(\r\n                <span\r\n                    id = {key}\r\n                    className = {boxs[key].classList}\r\n                    key = {key}\r\n                    onClick = {() => handleClickBox(key)}\r\n                    onContextMenu = {(event) => {\r\n                        event.preventDefault();\r\n                        handleFlag(key);\r\n                    }}\r\n                >\r\n                    {boxs[key].text}\r\n                </span>\r\n            );\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className = \"container\">\r\n            {renderList()}\r\n        </div>\r\n    );\r\n}\r\n\r\nGameArea.propTypes = {\r\n    opened: PropTypes.number,\r\n    boxs: PropTypes.object,\r\n    isStopGame: PropTypes.bool,\r\n    toggleTimer: PropTypes.bool,\r\n    handleCreateFlag: PropTypes.func,\r\n    handleDeleteFlag: PropTypes.func,\r\n    handleClickNumber: PropTypes.func,\r\n    handleGameOver: PropTypes.func,\r\n    handleFinishGame: PropTypes.func,\r\n    handleStartTime: PropTypes.func,\r\n    handleUpdateBox: PropTypes.func,\r\n};\r\n\r\nGameArea.defaultProps = {\r\n    opened: 0,\r\n    boxs: {},\r\n    isStopGame: false,\r\n    toggleTimer: false,\r\n    handleCreateFlag: () => console.warn('handleCreateFlag not defined'),\r\n    handleDeleteFlag: () => console.warn('handleDeleteFlag not defined'),\r\n    handleClickNumber: () => console.warn('handleClickNumber not defined'),\r\n    handleGameOver: () => console.warn('handelGameOver not defined'),\r\n    handleFinishGame: () => console.warn('handelFinishGame not defined'),\r\n    handleStartTime: () => console.warn('handleStartTime not defined'),\r\n    handleUpdateBox: () => console.warn('handleUpdateBox not defined'),\r\n};\r\n\r\nexport default GameArea;","// action type 정의\r\nexport const CREATE_MINE = 'CREATE_MINE';\r\nexport const UPDATE_BOX = 'UPDATE_BOX';\r\nexport const RESTART_GAME = 'RESTART_GAME';\r\nexport const DELETE_FIRST = 'DELETE_FIRST';\r\nexport const CREATE_FLAG = 'CREATE_FLAG';\r\nexport const DELETE_FLAG = 'DELETE_FLAG';\r\nexport const CLICK_NUMBER = 'CLICK_NUMBER';\r\nexport const CLICK_EMPTY = 'CLICK_EMPTY';\r\nexport const GAME_OVER = 'GAME_OVER';\r\nexport const FINISH_GAME = 'FINISH_GAME';\r\nexport const START_TIME = 'START_TIME';\r\n\r\nexport function createMine(obj){\r\n    return{\r\n        type: CREATE_MINE,\r\n        obj\r\n    };\r\n};\r\n\r\nexport function updateBox(obj, num){\r\n    return{\r\n        type: UPDATE_BOX,\r\n        obj,\r\n        num\r\n    };\r\n};\r\n\r\nexport function restartGame(){\r\n    return{\r\n        type: RESTART_GAME,\r\n    };\r\n};\r\n\r\nexport function createFlag(id){\r\n    return{\r\n        type: CREATE_FLAG,\r\n        id\r\n    };\r\n};\r\n\r\nexport function deleteFlag(id){\r\n    return{\r\n        type: DELETE_FLAG,\r\n        id\r\n    };\r\n};\r\n\r\nexport function clickNumber(id, num){\r\n    return{\r\n        type: CLICK_NUMBER,\r\n        id,\r\n        num\r\n    };\r\n};\r\n\r\nexport function clickEmpty(id){\r\n    return{\r\n        type: CLICK_EMPTY,\r\n        id\r\n    };\r\n};\r\n\r\nexport function gameOver(id){\r\n    return{\r\n        type: GAME_OVER,\r\n        id\r\n    };\r\n};\r\n\r\nexport function finishGame(){\r\n    return{\r\n        type: FINISH_GAME,\r\n    };\r\n};\r\n\r\nexport function startTime(){\r\n    return{\r\n        type: START_TIME,\r\n    };\r\n};","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AwardModal = () => {\r\n    const { time } = useSelector((state) => state.Minesweeper);\r\n    const [ name, setName ] = useState('');\r\n    const history = useHistory();\r\n\r\n    const onChangeName = e => {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(JSON.parse(localStorage.getItem(\"award\")) === null){\r\n            const award = [\r\n                {\r\n                    \"name\": name,\r\n                    \"time\": time\r\n                }\r\n            ];\r\n            localStorage.setItem(\"award\", JSON.stringify(award));\r\n        }else{\r\n            const localAward = JSON.parse(localStorage.getItem(\"award\"));\r\n            const award = [{ \"name\": name, \"time\": time}];\r\n            const awards = [...localAward, ...award];\r\n            localStorage.setItem(\"award\", JSON.stringify(awards));\r\n        };\r\n        alert(`랭킹에 ${name}님이 등재되었습니다.`);\r\n        history.push('/');\r\n    }\r\n\r\n    return(\r\n        <form onSubmit = {onSubmit} className = \"ModalContainer\">\r\n            <input value = {name} onChange = {onChangeName} placeholder = \"이름을 입력하세요!\" />\r\n            <button type = \"submit\">랭킹에 등재하기</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nAwardModal.propTypes = {\r\n    time: PropTypes.number,\r\n    name: PropTypes.string,\r\n    onChangeName: PropTypes.func,\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nAwardModal.defaultProps = {\r\n    time: 0,\r\n    name: '',\r\n    onChangeName: () => console.warn('onChange not defined'),\r\n    onSubmit: () => console.warn('onSubmit not defined'),\r\n};\r\n\r\nexport default AwardModal;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AwardModal from '../../components/gameHome/awardModal';\r\n\r\nconst GamePopup = ({ popupText, handleCreateMines }) => {\r\n    const [Modal, setModal] = useState(false);\r\n\r\n    const handleonClick = (type) => {\r\n        switch(type){\r\n            case '지뢰찾기를 다시 시작하시겠습니까?':\r\n                setModal(false);\r\n                handleCreateMines();\r\n                return null;\r\n            case '지뢰 발견! 다시 시작하기':\r\n                setModal(false);\r\n                handleCreateMines();\r\n                return null;\r\n            case '지뢰 찾기 클리어! 랭킹에 등록해보세요!':\r\n                setModal(false);\r\n                handleConfirm();\r\n                return null;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        if(window.confirm('랭킹에 기록하시겠습니까?')){\r\n            setModal(true);\r\n        }else{\r\n            handleCreateMines();\r\n        }\r\n    };\r\n\r\n    // popUp Text의 유무에 따라 다르게 출력\r\n    let popUpContainer = null;\r\n    if(popupText !== ''){\r\n        popUpContainer = \r\n        <>\r\n            <div className = \"popup-container\">\r\n                <span onClick = {() => handleonClick(popupText)}>\r\n                    {popupText}\r\n                </span>\r\n            </div>\r\n            {\r\n                Modal ? <AwardModal /> : null\r\n            }\r\n        </>\r\n    }\r\n    return(\r\n        <div>\r\n            {popUpContainer}\r\n        </div>\r\n    );\r\n};\r\n\r\nGamePopup.propTypes = {\r\n    Modal: PropTypes.bool,\r\n    popupText: PropTypes.string,\r\n    handleCreateMines: PropTypes.func,\r\n};\r\n\r\nGamePopup.defaultProps = {\r\n    Modal: false,\r\n    popupText: '',\r\n    handleCreateMines: () => console.warn('handleCreateMines not defined'),\r\n};\r\n\r\nexport default GamePopup;","import React, { useEffect } from 'react';\r\nimport * as actions from '../modules/actions';\r\nimport { setRandomMines } from '../lib';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport '../styles/gameHome/gameHome.scss';\r\nimport GameHeader from '../components/gameHome/game-header';\r\nimport GameArea from '../components/gameHome/game-area';\r\nimport GamePopup from '../components/gameHome/game-popup';\r\n\r\nconst GameHome = () => {\r\n    const { time, mines, popupText } = useSelector((state) => state.Minesweeper);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCreateMines = () => {\r\n        const boxObj = setRandomMines();\r\n        dispatch(actions.createMine(boxObj));\r\n    };\r\n\r\n    const handleRestartGame = () => dispatch(actions.restartGame());\r\n    \r\n    useEffect(() => {\r\n        handleCreateMines();\r\n    }, [])\r\n\r\n    return(\r\n        <div className = \"GameHome\">\r\n            <GameHeader\r\n                time = {time}\r\n                mines = {mines}\r\n                handleRestartGame = {handleRestartGame}\r\n            />\r\n            <GameArea />\r\n            <GamePopup\r\n                popupText = {popupText}\r\n                handleCreateMines = {handleCreateMines}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nGameHome.propTypes = {\r\n    time: PropTypes.number,\r\n    mines: PropTypes.number,\r\n    popupText: PropTypes.string,\r\n    handleCreateMines: PropTypes.func,\r\n    handleRestartGame: PropTypes.func,\r\n};\r\n\r\nGameHome.defaultProps = {\r\n    time: 0,\r\n    mines: 9,\r\n    popupText: '',\r\n    handleCreateMines: () => console.warn('handleCreateMines not defined'),\r\n    handleRestartGame: () => console.warn('handleRestartGame not defined')\r\n};\r\n\r\nexport default GameHome;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return(\r\n    <div className = \"Footer\">\r\n      <a href = \"https://github.com/Bigstar1108/Watcha-Minesweeper\">Made By Bigstar1108(Github)</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\n\nimport { basename } from './config/config.json';\nimport Main from './containers/Main';\nimport GameHome from './containers/gameHome';\nimport Footer from './components/Footer/Footer';\nimport './App.scss';\n\nconst App = () => {\n  return(\n    <div className = \"rootDiv\">\n      <BrowserRouter basename = {basename}>\n        <Switch>\n          <Route exact path = '/' component = {Main} />\n          <Route exact path = '/minesweeper' component = {GameHome} />\n        </Switch>\n        <Footer />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import * as actions from '../actions/index';\r\nimport update from 'react-addons-update';\r\n\r\nconst initialState = {\r\n    boxs: {},\r\n    opened: 0, \r\n    popupText: '',\r\n    mines: 9,\r\n    time: 0, \r\n    isStopGame: false,\r\n};\r\n\r\nexport default function Minesweeper(state = initialState, action){\r\n    switch(action.type){\r\n        case actions.CREATE_MINE:\r\n            return update(state, {\r\n                'boxs': {$set: action.obj},\r\n                'popupText': {$set: ''},\r\n                'opened': {$set: 0},\r\n                'mines': {$set: 9},\r\n                'time': {$set: 0},\r\n                'isStopGame': {$set: false},\r\n            });\r\n        \r\n        case actions.UPDATE_BOX:\r\n            return update(state, {\r\n                'boxs': {$set: action.obj},\r\n                'opened': {$set: state.opened + action.num},\r\n            });\r\n\r\n        case actions.RESTART_GAME:\r\n            return update(state, {\r\n                'popupText': {$set: '지뢰찾기를 다시 시작하시겠습니까?'},\r\n                'isStopGame': {$set: true},\r\n            });\r\n\r\n        case actions.CREATE_FLAG:\r\n            return update(state, {\r\n                'boxs': {\r\n                    [action.id]: {\r\n                        text: {$set: '⚑'},\r\n                        isFirst: {$set: false},\r\n                    }\r\n                },\r\n                'mines': {$set: --state.mines},\r\n            });\r\n\r\n        case actions.DELETE_FLAG:\r\n            return update(state, {\r\n                'boxs': {\r\n                    [action.id]: {\r\n                        text: {$set: ''},\r\n                        isFirst: {$set: true},\r\n                    }\r\n                },\r\n                'mines': {$set: ++state.mines}\r\n            });\r\n\r\n        case actions.CLICK_NUMBER:\r\n            return update(state, {\r\n                'boxs': {\r\n                    [action.id]: {\r\n                        text: {$set: action.num},\r\n                        isFirst: {$set: false},\r\n                    }\r\n                },\r\n                'opened': {$set: ++state.opened},\r\n            });\r\n\r\n        case actions.CLICK_EMPTY:\r\n            return update(state, {\r\n                'boxs': {\r\n                    [action.id]: {\r\n                        text: {$set: ''},\r\n                        classList: {$set: 'box opened'},\r\n                        isFirst: {$set: false},\r\n                    },\r\n                },\r\n                'opened': {$set: ++state.opened}\r\n            });\r\n\r\n        case actions.GAME_OVER:\r\n            return update(state, {\r\n                'boxs': {\r\n                    [action.id]: {\r\n                        text: {$set: '💣'},\r\n                        classList: {$set: 'box'},\r\n                        isFirst: {$set: false}\r\n                    }\r\n                },\r\n                'popupText': {$set: '지뢰 발견! 다시 시작하기'},\r\n                'mines': {$set: --state.mines},\r\n                'isStopGame': {$set: true}\r\n            });\r\n\r\n        case actions.FINISH_GAME:\r\n            return update(state, {\r\n                'popupText': {$set: '지뢰 찾기 클리어! 랭킹에 등록해보세요!'},\r\n                'isStopGame': {$set: true},\r\n            });\r\n\r\n        case actions.START_TIME:\r\n            return update(state, {\r\n                'time': {$set: ++state.time},\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport Minesweeper from './minesweeper.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    Minesweeper,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './modules/reducers';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}